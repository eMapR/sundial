trainer:
    callbacks:
      - class_path: callbacks.LogTrainCallback
      - class_path: callbacks.LogTrainBinaryExtCallback
    #   - class_path: callbacks.LogAvgMagGradientCallback
    #     init_args:
    #         # layers: ["patch_embed", "prithvi.model.blocks", "prithvi.norm", "probe_1", "probe_2"]
    #         # layers: ["patch_embed", "prithvi.model.blocks", "prithvi.norm", "upsample", "fcn"]
    #         layers: ["patch_embed", "prithvi.model.blocks", "prithvi.norm", "upscale_blocks", "fcn"]
    #         freq: 16
      - class_path: StochasticWeightAveraging
        init_args:
            swa_lrs: 0.0001
            device: null
    max_epochs: 128
    strategy: auto
    devices: 1
    num_nodes: 1
    accumulate_grad_batches: 1
    precision: bf16-mixed
optimizer:
    class_path: torch.optim.AdamW
    init_args:
        lr: 0.0001
lr_scheduler:
    class_path: torch.optim.lr_scheduler.CosineAnnealingLR
    init_args:
        T_max : 16
criterion:
    class_path: DiceLoss
activation:
    class_path: Sigmoid